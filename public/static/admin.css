/*******************************************************************************
  * Pico CSS  - responsive nav
  * Grows vertically (mobile-first). Changes back to horizontal growth on higher
  * resolutions.
  *****************************************************************************/

  :where(menu, [role="menu"]),
  :where(menu, [role="menu"]) > [role="menuitem"] {
    flex-direction: column;
    position: relative;
  }
  
  @media (min-width: 1024px) {
    :where(menu, [role="menu"]),
    :where(menu, [role="menu"]) > [role="menuitem"] {
      flex-direction: row;
    }
  }
  
  /*******************************************************************************
    * Pure CSS burger menu
    * Styles a parent + checkbox to look like 3 stacked lines when unchecked and
    * as a cross when checked. Includes animations.
    *****************************************************************************/
  
  [data-role="burger"] {
    opacity: 0.8;
    cursor: pointer;
    border-radius: 10%;
    box-sizing: border-box;
    background-color: transparent;
    height: 24px;
    width: 28px;
    padding: 0;
    margin: 0;
    border: 0 solid var(--pico-card-border-color, #9c9c9c);
  }
  
  [data-role="burger"] > input[type="checkbox"] {
    height: 4px;
    width: 28px;
    border: none;
    background-color: var(--pico-color, #000000);
    transition: all 0.2s ease-in-out;
    position: relative;
    margin-inline: 0;
  }

  [data-role="burger"] > input[type="checkbox"]:focus {
    box-shadow: none;
  }
  
  [data-role="burger"] > input[type="checkbox"]:checked {
    background-image: none;
    background-color: transparent;
  }
  
  [data-role="burger"] > input[type="checkbox"]::before, [data-role="burger"] > input[type="checkbox"]::after {
    height: 4px;
    width: 28px;
    border-radius: 2px;
    background-color: var(--pico-color, #000000);
    position: absolute;
    content: "";
    transition: all 0.2s ease-in-out;
  }
  
  [data-role="burger"] > input[type="checkbox"]::before {
    top: -10px;
  }
  
  [data-role="burger"] > input[type="checkbox"]::after {
    top: 10px;
  }
  
  [data-role="burger"] > input[type="checkbox"]:checked::before {
    box-shadow: none;
    transform: rotate(45deg) translate(7px, 7px);
  }
  
  [data-role="burger"] > input[type="checkbox"]:checked::after {
    box-shadow: none;
    transform: rotate(-45deg) translate(7px, -7px);
  }
  
  /*******************************************************************************
    * Pure CSS toggle
    * Uses a checkbox to trigger rules and show/hide related elements.
    *****************************************************************************/
  
  /* adjust menu for toggling */
  :where(menu, [role="menu"]) {
    position: relative; /* anchor for children */
    /* needed otherwise it grows to fit all its children */
    max-height: calc(var(--pico-line-height) * 1em + var(--pico-nav-element-spacing-vertical)*2);
  }
  
  /* hide entries within menu */
  :where(menu, [role="menu"]) > [role="menuitem"] {
    visibility: hidden;
    opacity: 0;
    position: relative;
    background-color: var(--pico-background-color);
  }
  
  /* show hidden items when burger is checked :D */
  :where(menu, [role="menu"]):has(> label > input[type="checkbox"]:checked) > [role="menuitem"] {
    visibility: visible;
    opacity: 1;
    z-index: 9999;
    margin-right: 0;
    clip-path: inset(0px -50px -50px -50px);
    box-shadow: var(--pico-card-box-shadow);
  }
  
  /* position the menu button */
  :where(menu, [role="menu"]) > label {
    position: absolute;
    right: 0;
    top: var(--pico-nav-element-spacing-vertical);
    padding: var(--pico-nav-element-spacing-vertical) var(--pico-nav-element-spacing-horizontal);
  }
  
  @media (min-width: 1024px) {
    /* hide menu button */
    :where(menu, nav[role="menu"]) > label {
      display: none;
    }
  
      /* show all elements */
    :where(menu, [role="menu"]) > [role="menuitem"] {
      visibility: visible;
      opacity: 1;
      display: flex;
      top: unset;
    }
  }

  
  /*******************************************************************************

    * END OV NAV STYLES

    *****************************************************************************/

form {
  box-shadow: none !important;
}

textarea {
  field-sizing: content;
  min-height: 5rem;
}

header.w-button {
  display: flex;
  justify-Content: space-between;
}

small li{
  margin-bottom: 0;
  padding-bottom: 0px;
}

.mb-2{
  margin-bottom: 0.2rem;
}

.bi {
  margin-right: 0.3rem;
}

.transparent-bg{
  background-color: transparent !important;
}

.admin-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  width: 100%;
  gap: 20px;
}

.admin-card {
  position: relative;
  box-sizing: border-box;
  height: 100%;
  border-top: solid var(--pico-card-border-color, #e0e0e0);
  box-shadow: var(--pico-card-box-shadow);
  border-radius: var(--pico-border-radius, 5px);
  background-color: var(--pico-card-background-color);
}

.image-wrapper {
  position: relative;
  width: 100%;
  padding-bottom: 100%; /* Creates a square aspect ratio */
  overflow: hidden;
  background-color: var(--pico-card-border-color, #9c9c9c);
}

.edit-card-img-top {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: scale-down;
}

.admin-card-body {
  padding: 1rem;
  flex-grow: 1;
  display: flex;
  flex-direction: column;
}

.admin-card-buttons {
  margin-top: auto;
  display: flex;
  gap: 0.5rem;
  flex-direction: column;
}

.admin-card-thumb {
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  cursor: pointer !important;
  padding: 0.25rem;
  z-index: 1;
  border-bottom: none !important;
}

#uploader-wraper {
  width: 100%;
  height: auto;
  transition: height 0.5s ease;
  overflow: hidden;
  padding: 1rem;
}

#uploader-wraper.closed {
  height: 0;
  padding: 0;
  overflow: hidden;
}

#toggle-uploader-button {
  cursor: pointer;
}


.btn.htmx-request {
    position: relative;
    overflow: hidden;
  }
  
  .btn.htmx-request::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 200%;
    height: 100%;
    background: linear-gradient(90deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0.1));
    animation: loading-wave 1s linear infinite;
    z-index: 1; 
    pointer-events: none; 
  }
  
  @keyframes loading-wave {
    from {
      left: -100%;
    }
    to {
      left: 100%;
    }
  }
